syntax = "proto3";//the type of proto we use
option go_package = "HW3/grpc/proto"; //import path

message Message {
  int32 ClientId = 1;
  int32 LamportClock = 2;
  string MessageContent = 3;
  //todo: event type?
}

message ClientInformation{
  int32 ClientId = 1;
  int32 LamportClock = 2;
}

message BroadcastMessage{
  int32 LamportClock = 1;
  string MessageContent = 2;
}

message ClientId{
  int32 Id = 1;
}

message Empty {} //Empty is a placeholder message with no fields, used when no input is needed

service ChitChat { //declares a gRPC service
  rpc PublishMessage (Message) returns (Empty) {}; //function we call from client, request contains Message and returns empty
  rpc JoinSystem (ClientInformation) returns (ClientId){}; //When Client asks for an ID
  rpc LeaveSystem (ClientInformation) returns (Empty){}; //When Client announces that it's leaving system
  rpc Broadcast (ClientId) returns (stream BroadcastMessage){}; //When Client opens a stream to receive broadcasts, for server to send to client
}
/* Everytime something is changed in proto file, run the following command in the terminal:
protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative proto.proto
*/